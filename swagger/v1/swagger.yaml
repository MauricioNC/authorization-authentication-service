---
openapi: 3.0.0
info:
  title: Auth Service
  description: API for authoentication and authorization service
  version: 1.0.0
servers:
- url: https://authorization-authentication-service.onrender.com/api/v1/
  description: SwaggerHub API Auto Mocking
paths:
  /tokens/new:
    post:
      summary: Creates a new token
      security:
        - authorization: []
      requestBody:
        description: "User id, owner of the token"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserId'
        required: true
      responses:
        "201":
          description: Success reponse and token created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        "422":
          description: Failed response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
  /auth/login_with_email:
    post:
      summary: Authenticate user credentials with email and password
      security:
        - authorization: []
      requestBody:
        description: "Login with credentials"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginWithEmail'
      responses:
        "200":
          description: Success responde and authentication success
          content:
            application/json:
              schema:
                type: object
        "401":
          description: Failed response and unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedResponse'
  /auth/login_with_token:
    post:
      summary: Authenticate user with token
      security:
        - authorization: []
      requestBody:
        description: "Login with token"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginWithToken'
      responses:
        "200":
          description: Success responde and authentication success
          content:
            application/json:
              schema:
                type: object
        "401":
          description: Failed response and unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedResponse'
  /authorize:
    post:
      summary: Authorize the API request based on header parameter
      security:
        - authorization: []
      responses:
        "200":
          description: Success reponse and authorized access
          content:
            application/json:
              schema:
                type: object
        "401":
          description: 'Filed response and unauthorized access' 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedResponse'
components:
  securitySchemes:
    authorization:
      type: apiKey
      in: header
      name: Authorization
  schemas:
    UserId:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
    loginWithEmail:
      type: object
      properties:
        email:
          type: string
          example: user@example.com
        password:
          type: string
          example: myPassword1
    loginWithToken:
      type: object
      properties:
        token:
          type: string
          example: kYBio5KqSYP0TLUqGsb8Dcl11WfikGpL3M80
    SuccessResponse:
      type: object
      properties:
        status:
          type: integer
          example: 201
        message:
          type: string
          example: Token was successfully created
    UnprocessableEntityResponse:
      required:
      - error
      - status
      type: object
      properties:
        status:
          type: integer
          example: 422
        error:
          type: string
          example: User not found with id...
    FailedResponse:
      type: object
